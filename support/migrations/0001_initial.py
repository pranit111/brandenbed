# Generated by Django 4.2.23 on 2025-09-01 13:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('residents', '0001_initial'),
        ('employees', '0001_initial'),
        ('properties', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='SupportCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('maintenance', 'Maintenance & Repairs'), ('housekeeping', 'Housekeeping'), ('amenities', 'Amenities (WiFi, Power, etc.)'), ('access_security', 'Access & Security'), ('billing', 'Billing & Payments'), ('room_issues', 'Room Issues'), ('neighbor_complaints', 'Neighbor Complaints'), ('contract', 'Contract & Legal'), ('move_in_out', 'Move In/Out'), ('general_inquiry', 'General Inquiry'), ('emergency', 'Emergency'), ('other', 'Other')], max_length=25, unique=True)),
                ('description', models.TextField(blank=True)),
                ('priority_level', models.PositiveIntegerField(default=3, help_text='1=High, 2=Medium, 3=Low')),
                ('sla_hours', models.PositiveIntegerField(default=24, help_text='Service Level Agreement in hours')),
            ],
            options={
                'verbose_name_plural': 'Support Categories',
            },
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_id', models.CharField(max_length=20, unique=True)),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.PositiveIntegerField(choices=[(1, 'Emergency'), (2, 'High'), (3, 'Medium'), (4, 'Low')], default=3)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('waiting_resident', 'Waiting for Resident'), ('escalated', 'Escalated'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='open', max_length=20)),
                ('sla_due_date', models.DateTimeField(blank=True, null=True)),
                ('first_response_time', models.DateTimeField(blank=True, null=True)),
                ('resolution_time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('requires_followup', models.BooleanField(default=False)),
                ('followup_date', models.DateField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.employee')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='support.supportcategory')),
                ('property_ref', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='properties.property')),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_tickets', to='residents.resident')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_tickets', to='employees.employee')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='properties.room')),
            ],
            options={
                'ordering': ['priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_type', models.CharField(choices=[('internal', 'Internal Note'), ('resident_response', 'Response to Resident'), ('status_update', 'Status Update'), ('escalation', 'Escalation Note')], default='internal', max_length=20)),
                ('comment', models.TextField()),
                ('is_internal', models.BooleanField(default=True, help_text='Internal notes are not visible to residents')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='ticket_attachments/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employees.employee')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='support.supportticket')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
    ]
